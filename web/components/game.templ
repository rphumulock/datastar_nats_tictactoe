package components 

import (
	"fmt"
	datastar "github.com/starfederation/datastar/code/go/sdk"
	"github.com/zangster300/northstar/web/layouts"
)

type GameState struct {
	Id      string    `json:"id"`
	Players [2]string `json:"players"`
	Board   [9]string `json:"board"`
	XIsNext bool      `json:"x_is_next"`
	Winner  string    `json:"winner"`
}

// templ GameMVCView(mvc *GameState, sessionId string) {
// 	{{
// 		gameId := mvc.Id
// 	}}
// 	@layouts.Base() {
// 		<div class="h-full w-3/4 relative border border-solid border-primary rounded p-2 my-2 mx-28" data-on-load={ datastar.GetSSE("/game/%s/watch", gameId) }>
// 			<div class="flex flex-col w-full h-full gap-4">
// 				<div class="container mx-auto flex items-center justify-between">
// 					<span class="text-xl font-semibold">Tic Tac Toe - Game: { gameId }</span>
// 					<div id="user-session-container">Hello { sessionId }!</div>
// 				</div>
// 				<section class="flex flex-col w-full h-full gap-2">
// 					@GameBoard(mvc, sessionId)
// 				</section>
// 				<footer class="flex justify-center text-xs">
// 					<button
// 						class="btn btn-primary text-lg"
// 						data-on-click={ datastar.PostSSE("api/game/reset") }
// 					>
// 						Reset
// 					</button>
// 				</footer>
// 			</div>
// 		</div>
// 	}
// }

// templ GameBoard(gameState *GameState, sessionId string) {
// 	{{
// 		gameId := gameState.Id
// 		board := gameState.Board
// 	}}
// 	<div id="game-container" class="grid grid-cols-3 grid-rows-3 gap-2 w-full h-full mt-4">
// 		for i, cell := range board {
// 			@Cell(gameId, cell, i, gameState, sessionId)
// 		}
// 	</div>
// }

// templ Cell(id string, cell string, i int, gameState *GameState, sessionId string) {
// 	{{
// 		clicked := cell != ""
// 	}}
// 	<button
// 		id={ "cell-" + fmt.Sprintf("%d", i) }
// 		class={
// 			"w-full h-full border-primary flex items-center justify-center text-5xl font-semibold cursor-pointer",
// 			map[string]bool{
// 				"hover:border-gray-100 border-2 ": !clicked,
// 				"border-secondary border-8":       clicked,
// 			},
// 		}
// 		data-on-click={ datastar.PostSSE("/game/%s/toggle/%d", id, i) }
// 		if cell != "" {
// 			disabled
// 		}
// 	>
// 		{ cell }
// 	</button>
// }
templ GameMVCView(mvc *GameState, sessionId string) {
	{{
		gameId := mvc.Id
		winner := mvc.Winner
		isWinner := winner != ""
	}}
	@layouts.Base() {
		<div
			class="h-full w-3/4 relative border border-solid border-primary rounded p-2 my-2 mx-28"
			data-on-load={ datastar.GetSSE("/game/%s/watch", gameId) }
		>
			<div class="flex flex-col w-full h-full gap-4 relative">
				<!-- Game Header -->
				<div class="container mx-auto flex items-center justify-between">
					<span class="text-xl font-semibold text-primary">Tic Tac Toe - Game: { gameId }</span>
					<div id="user-session-container" class="text-secondary">Hello, { sessionId }!</div>
				</div>
				<!-- Game Board -->
				<section class="flex flex-col w-full h-full gap-2">
					@GameBoard(mvc, sessionId)
				</section>
				<!-- Game Footer -->
				<footer class="flex justify-center text-xs">
					<button
						class="btn btn-primary text-lg"
						data-on-click={ datastar.PostSSE("api/game/reset") }
					>
						Reset Game
					</button>
				</footer>
			</div>
		</div>
	}
}

templ GameBoard(gameState *GameState, sessionId string) {
	{{
		gameId := gameState.Id
		board := gameState.Board
	}}
	<div id="game-container" class="grid grid-cols-3 grid-rows-3 gap-4 w-full h-full mt-4">
		for i, cell := range board {
			@Cell(gameId, cell, i, gameState, sessionId)
		}
	</div>
}

templ Cell(id string, cell string, i int, gameState *GameState, sessionId string) {
	{{
		clicked := cell != ""
		isWinner := gameState.Winner != ""
	}}
	<button
		id={ "cell-" + fmt.Sprintf("%d", i) }
		class={
			"w-full h-full border-4 flex items-center justify-center text-5xl font-semibold cursor-pointer rounded-lg transition-transform duration-300",
			map[string]bool{
				"hover:border-gray-100 border-primary hover:scale-105": !clicked && !isWinner,
				"border-secondary bg-gray-200 text-gray-800 scale-100": clicked && !isWinner,
				"bg-green-500 text-white animate-bounce":               isWinner && clicked,
			},
		}
		data-on-click={ datastar.PostSSE("/game/%s/toggle/%d", id, i) }
		if cell != "" || isWinner {
			disabled
		}
	>
		{ cell }
	</button>
}


if isWinner {
					<div class="absolute inset-0 flex items-center justify-center bg-opacity-80 bg-green-500 text-white text-4xl font-bold z-10">
						<span>ðŸŽ‰ { winner } Wins! ðŸŽ‰</span>
					</div>
				}