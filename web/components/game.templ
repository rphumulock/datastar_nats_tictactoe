package components 

import (
	"fmt"
	datastar "github.com/starfederation/datastar/code/go/sdk"
	"github.com/zangster300/northstar/web/layouts"
	"log"
)

type GameState struct {
	Id      string    `json:"id"`
	Players [2]string `json:"players"`
	Board   [9]string `json:"board"`
	XIsNext bool      `json:"x_is_next"`
	Winner  string    `json:"winner"`
}

// ------------------------------------------
templ InitGame(sessionId string) {
	<div id="main-container" class="flex flex-col items-center justify-center">
		<div class="text-center text-3xl font-bold mb-6">
			Welcome, { sessionId }
		</div>
		<button
			class="btn btn-primary text-lg"
			data-on-click={ datastar.PostSSE("/api/game/create") }
		>
			Create Game
		</button>
		<section class="w-1/2 m-8 p-6 bg-base-300 border-4 border-accent-content shadow-lg rounded-lg h-[32rem] overflow-y-scroll">
			<h2 class="text-2xl text-secondary-content text-bg-base mb-6">Active Games</h2>
			<div
				id="games-list-container"
				class="space-y-6"
				data-on-load="$get('/api/games')"
			></div>
		</section>
	</div>
}

templ GameMVCView(mvc *GameState, sessionId string) {
	{{
		gameId := mvc.Id
		board := mvc.Board

		log.Println("Board", board)
	}}
	@layouts.Base() {
		<div id="game-container" class="h-full w-3/4 relative border border-solid border-primary rounded p-2 my-2 mx-28" data-store="{clicks: 0}">
			<div class="flex flex-col w-full h-full gap-4">
				<div class="container mx-auto flex items-center justify-between">
					<span class="text-xl font-semibold">Tic Tac Toe - Game: { gameId }</span>
					<div id="user-session-container">Hello { sessionId }!</div>
				</div>
				<section class="flex flex-col w-full h-full gap-2">
					<div class="grid grid-cols-3 grid-rows-3 gap-2 w-full h-full mt-4">
						for i, cell := range board {
							@Cell(gameId, cell, i)
						}
					</div>
				</section>
				<footer class="flex justify-center text-xs">
					<button
						class="btn btn-primary text-lg"
						data-on-click={ datastar.PostSSE("api/game/reset") }
					>
						Reset
					</button>
				</footer>
			</div>
		</div>
	}
}

templ RemoveGame(mvc *GameState) {
	{{ id := fmt.Sprintf("game-%s", mvc.Id) }}
	<div id={ id }>
		{ mvc.Id }
	</div>
}

templ JoinGame(mvc *GameState, sessionId string) {
	{{
		gameFull := mvc.Players[1] != "" && mvc.Players[0] != sessionId && mvc.Players[1] != sessionId
		id := fmt.Sprintf("game-%s", mvc.Id)
	}}
	<div id={ id } class="p-4 bg-gray-100 rounded-lg shadow">
		<h3 class="text-lg font-semibold text-gray-700">{ mvc.Id }</h3>
		if gameFull {
			<p class="text-red-500">Game is full</p>
		} else {
			<a class="btn btn-primary mt-4 w-full" href={ templ.URL(fmt.Sprintf("/game/%s", mvc.Id)) }>Join Game</a>
		}
	</div>
}

templ HostedGame(mvc *GameState, sessionId string) {
	{{ id := fmt.Sprintf("game-%s", mvc.Id) }}
	<div id={ id } class="p-4 bg-gray-100 rounded-lg shadow">
		<h3 class="text-lg font-semibold text-gray-700">{ mvc.Id }</h3>
		<a class="btn btn-primary mt-4 w-full" href={ templ.URL(fmt.Sprintf("/game/%s", sessionId)) }>Join Game</a>
		<button class="btn btn-error mt-4 w-full" data-on-click={ datastar.DeleteSSE("/api/game/%s/delete", mvc.Id) }>Delete</button>
	</div>
}

templ Cell(id string, cell string, i int) {
	{{
		clicked := cell != ""
	}}
	<button
		class={
			"w-full h-full border-primary flex items-center justify-center text-5xl font-semibold cursor-pointer",
			map[string]bool{
				"hover:border-gray-100 border-2 ": !clicked,
				"border-secondary border-8":       clicked,
			},
		}
		data-on-click={ datastar.PostSSE("/game/%s/toggle/%d", id, i) }
		if cell != "" {
			disabled
		}
	>
		{ cell }
	</button>
}
