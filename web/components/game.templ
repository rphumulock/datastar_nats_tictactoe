package components

import (
	"fmt"
	datastar "github.com/starfederation/datastar/code/go/sdk"
	"github.com/zangster300/northstar/web/layouts"
)

type GameState struct {
	Id      string    `json:"id"`
	Players [2]string `json:"players"`
	Board   [9]string `json:"board"`
	XIsNext bool      `json:"x_is_next"`
	Winner  string    `json:"winner"`
}

templ GameMVCView(mvc *GameState, sessionId string) {
	{{
		gameId := mvc.Id
		isWinner := mvc.Winner != ""
	}}
	@layouts.Base() {
		<div
			class="h-full w-3/4 relative border border-solid border-primary rounded p-4 mx-auto my-10"
			data-on-load={ datastar.GetSSE("/game/%s/watch", gameId) }
		>
			<div class="flex flex-col w-full h-full gap-4 relative">
				<!-- Winner Overlay -->
				if isWinner {
					@GameWinner(mvc, sessionId)
				}
				<!-- Game Header -->
				<div class="flex justify-between items-center p-4 bg-gray-100 rounded-lg shadow-md">
					<span class="text-2xl font-bold text-primary">Tic Tac Toe - Game: { gameId }</span>
					<div id="user-session-container" class="text-lg text-secondary">Hello, { sessionId }!</div>
					<a
						class="btn btn-secondary text-md px-6 py-3"
						href="/"
					>
						Dashboard
					</a>
				</div>
				<!-- Game Board -->
				<section class="flex flex-col w-full h-full gap-2">
					@GameBoard(mvc, sessionId)
				</section>
			</div>
		</div>
	}
}

templ GameBoard(gameState *GameState, sessionId string) {
	{{
		gameId := gameState.Id
		board := gameState.Board
	}}
	<div id="game-container" class="grid grid-cols-3 grid-rows-3 gap-4 w-full h-full mt-4">
		for i, cell := range board {
			@Cell(gameId, cell, i, gameState, sessionId)
		}
	</div>
}

templ Cell(id string, cell string, i int, gameState *GameState, sessionId string) {
	{{
		clicked := cell != ""
		isWinner := gameState.Winner != ""
	}}
	<button
		id={ "cell-" + fmt.Sprintf("%d", i) }
		class={
			"w-full h-full border-4 flex items-center justify-center text-5xl font-semibold cursor-pointer rounded-lg transition-transform duration-300",
			map[string]bool{
				"hover:border-gray-100 border-primary hover:scale-105": !clicked && !isWinner,
				"border-secondary bg-gray-200 text-gray-800 scale-100": clicked && !isWinner,
				"bg-green-500 text-white animate-bounce":               isWinner && clicked,
			},
		}
		data-on-click={ datastar.PostSSE("/game/%s/toggle/%d", id, i) }
		if cell != "" || isWinner {
			disabled
		}
	>
		{ cell }
	</button>
}

templ GameWinner(gameState *GameState, sessionId string) {
	{{
		gameId := gameState.Id
		winner := gameState.Winner
	}}
	<div
		id="game-container"
		class="absolute inset-0 flex flex-col items-center justify-center bg-opacity-90 bg-green-500 text-white z-10 p-8 rounded-lg shadow-lg"
		aria-live="assertive"
		role="dialog"
	>
		<!-- Winner Announcement -->
		<h1 class="text-5xl font-extrabold mb-6 animate-bounce">
			ðŸŽ‰ { winner } Wins! ðŸŽ‰
		</h1>
		<!-- Play Again Button -->
		<button
			class="btn btn-primary text-xl px-6 py-3 mb-4"
			data-on-click={ datastar.PostSSE("/game/%s/reset", gameId) }
		>
			Play Again
		</button>
		<!-- Back to Dashboard Button -->
		<a
			class="btn btn-secondary text-xl px-6 py-3"
			href="/"
		>
			Back to Dashboard
		</a>
	</div>
}
