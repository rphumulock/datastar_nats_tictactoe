package components

import (
	"fmt"
	datastar "github.com/starfederation/datastar/sdk/go"
)

templ GameBoard(gameState *GameState, gameName, hostName, challengerName string, isHost bool) {
	<div id="gameboard">
		<div class="flex flex-col sm:flex-row justify-between items-center p-4 bg-accent shadow-md w-full rounded-lg border border-accent-content mb-4">
			<div class="flex flex-col sm:flex-row gap-4 items-center w-full sm:w-auto text-center">
				<div class="text-sm sm:text-lg font-bold text-secondary-content">
					🎮 Game: <span class="text-primary">{ gameName }</span>
				</div>
				<div class="text-sm sm:text-lg font-bold text-secondary-content">
					🏠 Host: <span class="text-primary">{ hostName }</span>
				</div>
				<div class="text-sm sm:text-lg font-bold text-secondary-content">
					⚔️ Challenger: <span class="text-primary">{ challengerName }</span>
				</div>
			</div>
			<div class="flex flex-col sm:flex-row gap-3 w-full sm:w-auto mt-4 sm:mt-0">
				if (isHost) {
					<a
						class="btn btn-secondary px-6 py-2 text-center w-full sm:w-auto shadow-md transition-all duration-300 hover:scale-105 hover:bg-secondary-focus"
						href="/dashboard"
					>
						🏠 Back to Dashboard
					</a>
				} else {
					<button
						class="btn btn-secondary px-6 py-2 text-center w-full sm:w-auto shadow-md transition-all duration-300 hover:scale-105 hover:bg-secondary-focus"
						data-on-click={ datastar.PostSSE("/api/game/%s/leave", gameState.Id) }
					>
						🚪 Leave Game
					</button>
				}
			</div>
		</div>
		<div class="relative flex items-center justify-center w-full">
			<div class="grid grid-cols-3 grid-rows-3 gap-2 w-full max-w-[600px] aspect-square bg-base-300 p-4 shadow-lg">
				for i, cell := range gameState.Board {
					@Cell(gameState.Id, cell, i)
				}
			</div>
		</div>
	</div>
}

templ Cell(id string, cell string, i int) {
	<button
		id={ "cell-" + fmt.Sprintf("%d", i) }
		class="w-full h-full bg-secondary border-base-content border-4 flex items-center justify-center text-5xl text-secondary-content font-bold cursor-pointer aspect-square transition-transform duration-300 ease-in-out hover:scale-105 hover:bg-secondary-focus"
		data-on-click={ datastar.PostSSE("/api/game/%s/toggle/%d", id, i) }
		if cell != "" {
			disabled
			class="cursor-not-allowed opacity-50"
		}
	>
		{ cell }
	</button>
}

// templ GameWinner(sessionId string, gameState *GameState, gameLobby *GameLobby) {
// 	<div
// 		class="absolute inset-0 flex flex-col items-center justify-center bg-green-600 bg-opacity-90 text-white z-10 p-6 rounded-lg shadow-xl transition-all animate-fade-in"
// 		aria-live="assertive"
// 		role="dialog"
// 	>
// 		if (gameState.Winner == "TIE") {
// 			<h1 class="text-5xl sm:text-6xl font-extrabold mb-4 animate-bounce text-center">
// 				🤝 It's a Tie! 🤝
// 			</h1>
// 		} else {
// 			<h1 class="text-5xl sm:text-6xl font-extrabold mb-4 animate-bounce text-center">
// 				🎉 { gameState.Winner } Wins! 🎉
// 			</h1>
// 		}
// 		<div class="flex flex-col sm:flex-row gap-4 w-full max-w-[80%] sm:max-w-[60%] items-center justify-center">
// 			if (sessionId == gameLobby.HostId) {
// 				<button
// 					class="btn btn-primary w-full sm:w-auto px-6 py-3 rounded-md shadow-md transition-all hover:scale-105"
// 					data-on-click={ datastar.PostSSE("/api/game/%s/reset", gameState.Id) }
// 				>
// 					Play Again 🔄
// 				</button>
// 			}
// 			<a class="btn btn-secondary w-full sm:w-auto px-6 py-3 rounded-md shadow-md transition-all hover:scale-105" href="/">
// 				Back to Dashboard 🏠
// 			</a>
// 			if (sessionId != gameLobby.HostId) {
// 				<button
// 					class="btn btn-secondary w-full sm:w-auto px-6 py-3 rounded-md shadow-md transition-all hover:scale-105"
// 					data-on-click={ datastar.PostSSE("/api/game/%s/leave", gameState.Id) }
// 				>
// 					Leave Game 🚪
// 				</button>
// 			}
// 		</div>
// 	</div>
// }
