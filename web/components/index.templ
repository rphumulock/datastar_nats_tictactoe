package components 

import (
	"fmt"
	datastar "github.com/starfederation/datastar/sdk/go"
)

type InlineValidationUser struct {
	FirstName string `json:"firstName"`
	LastName  string `json:"lastName"`
	Email     string `json:"email"`
}

templ inlineValidationFieldComponent(label, field string, isValid bool, isNotValidErrorLabelFmt string, labelArgs ...any) {
	<div class="form-control">
		<label class="label">
			<span class="label-text">{ label }</span>
		</label>
		<input
			class={ "input input-bordered", templ.KV("input-error", !isValid) }
			data-bind={ field }
			data-on-keydown__debounce.500ms={ datastar.GetSSE("/examples/inline_validation/data") }
		/>
		if !isValid {
			<label class="text-sm font-bold text-error">{ fmt.Sprintf( isNotValidErrorLabelFmt, labelArgs...) }</label>
		}
	</div>
}

templ inlineValidationUserComponent(u *InlineValidationUser, isNameValid, isValid bool) {
	<div
		class="flex flex-col gap-4"
		data-signals={ "{disabled:'true'}" }
	>
		<div>
			@inlineValidationFieldComponent("Name", "name", isNameValid, "Name must be at least 2 characters.")
		</div>
		<button class="btn btn-primary w-full" data-on-click={ datastar.PostSSE("api/index/login") }>
			Login
		</button>
	</div>
}
